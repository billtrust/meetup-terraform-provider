// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateMascotReader is a Reader for the UpdateMascot structure.
type UpdateMascotReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMascotReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateMascotOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewUpdateMascotNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateMascotOK creates a UpdateMascotOK with default headers values
func NewUpdateMascotOK() *UpdateMascotOK {
	return &UpdateMascotOK{}
}

/*UpdateMascotOK handles this case with default header values.

Success
*/
type UpdateMascotOK struct {
}

func (o *UpdateMascotOK) Error() string {
	return fmt.Sprintf("[PUT /{id}][%d] updateMascotOK ", 200)
}

func (o *UpdateMascotOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMascotNotFound creates a UpdateMascotNotFound with default headers values
func NewUpdateMascotNotFound() *UpdateMascotNotFound {
	return &UpdateMascotNotFound{}
}

/*UpdateMascotNotFound handles this case with default header values.

Not Found
*/
type UpdateMascotNotFound struct {
}

func (o *UpdateMascotNotFound) Error() string {
	return fmt.Sprintf("[PUT /{id}][%d] updateMascotNotFound ", 404)
}

func (o *UpdateMascotNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
